var geometry = /* color: #d63000 */ee.Geometry.Polygon(
        [[[2.8632548701297322, 36.62257492671332],
          [2.842312182141451, 36.622023835077734],
          [2.831325854016451, 36.60783186864759],
          [2.862739885998873, 36.60755627063179]]]),
    s2 = ee.ImageCollection("COPERNICUS/S2_HARMONIZED");

var filtereds2 = s2.filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 30))
.filter(ee.Filter.date('2024-01-01','2024-04-11'))
.filter(ee.Filter.bounds(geometry));

// Sort the collection and pick the least cloudy image
var filtereds2Sorted = filtereds2.sort('CLOUDY_PIXEL_PERCENTAGE');
var image = filtereds2Sorted.first().select('B.*');

var rgbVis = {min:0.0,max:3000,bands:['B4','B3','B2']};
Map.centerObject(geometry);
Map.addLayer(image,rgbVis,'image');

// If we want to compute the average value in each band,
// we can use reduceRegion instead
var stats = image.reduceRegion({
  reducer: ee.Reducer.mean(), 
  geometry: geometry, 
  scale:10,
  maxPixels:1e10});
print('Average values of image bands in geometry', stats);

// We can extract the values using .get() function
print('Average value of B4 in geometry', stats.get('B4'));

// Calculate NDVI
var ndvi = image.normalizedDifference(['B8','B4']).rename(['NDVI']);
var palette = ['#a6611a','#dfc27d','#f5f5f5','#80cdc1','#018571'];
var ndviVis = {min:0,max:0.5,palette:palette};

Map.addLayer(ndvi,ndviVis,'NDVI IMAGE');

// Calculate the 'average' NDVI in the farm from the 'ndvi' image
var ndvistats = ndvi.reduceRegion({reducer:ee.Reducer.mean(), 
geometry:geometry, scale:10, maxPixels:1e10});
print('average value of ndvi in this polygon is',ndvistats);

// a function for Cloud masking
function maskS2clouds(image) {
  var qa = image.select('QA60');
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0).and(
             qa.bitwiseAnd(cirrusBitMask).eq(0));
  return image.updateMask(mask)
      .select('B.*')
      .copyProperties(image, ['system:time_start']);
}

// a function that computes NDVI for an image and adds it as a band
function addNDVI (image){
  var ndvi = image.normalizedDifference(['B8','B4']).rename('ndvi');
  return image.addBands(ndvi);
}

// Map the function over the collection
var withndvi = filtereds2.map(maskS2clouds).map(addNDVI);

// Display a time-series chart

var chart = ui.Chart.image.series({
  imageCollection:withndvi.select('ndvi'), 
  region:geometry, 
  reducer:ee.Reducer.mean(), 
  scale:10,}).setOptions({
    title:'NDVI Time Series',
    vAxis:{title:'ndvi',viewWindow:{min:0,max:1}},
    hAxis:{title:'',format:'YYYY-MMM'},
    lineWidth:1,
    pointSize:2,
    interpolateNulls: true
  });
print(chart);
